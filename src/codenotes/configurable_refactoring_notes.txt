TGG 03 Aug 2019

RPG has just resigned, DM2 has stopped

My thoughts on the code at the moment:
* no roadmap or desired feature list
* too complex, too many special cases
* buggy; many half-implemented features
* not configurable enough
* a lot of optional extras that may be better off in a separate mod eg all the items
* formatting isn't consistent; package locations a bit strange in places

Purpose of this refactoring:
* make configurable:
- the basic model plus configurable variations
- remove hard-coded constants from the code
  configurable parameters:
  # physical variants such as number of segments in the tail
  # the breath appearance
    - nodes, projectile
    - texture file
    - speed, size, number etc
  # the breath movement style (eg beam, cloud)
  # the breath effects
    - effects on entities - damage, type of damage
    - effects on blocks
  # sound effects of breath
    - different life stages
  # dragon effects eg on the ground
  # behaviour eg aggression, laziness, etc
- life stages defined properly

Features to be retained:
* Dragons breathing
* Dragon parents, breeding
* Dragon eggs
* Saddles
* Rideable dragons, dragon ride on shoulder
* Dragon whistle and dragon orb / wand
* Dragon flying
* Dragon GUI - perhaps

Components to be removed for now:
* All non-core features and items such as bows, armour, gems, recipes
* All non-core AI
* Carriage/saddlebags
* Capes
* loot tables, shearable

Order of refactoring:
1) Remove un-used components
2) Fix life stage
3) Remove hard-coded breeds and replace with configurable breeds:
  * Remove all variants back to a single base, add configurable options back
  * DragonVariants refactor to have one file per breed
  * Create interactive tool for configuration in-game

Convert egg to a separate entity, it's not a dragon.
Egg can have a few different states-
Incubating, hatched, smashed.
Hatched or smashed - eventually disappears similar to an item

18-9-2019 egg is done
next: refactor dragon back to a base, starting with the entity and then the model

idea: male & female, have two categories and copy one to the other

eg
Category: base
Category: male
Category: female
At validation: copy all tags from base to male except if the male has already defined it.  likewise female
- for appearance, physical characteristics including model, lifestagehelper
-either copy, or have as "derived" or "child" category?  when getValueOrDefault, check both child and parent for defined tag

instead - apply a modifier to the category
eg
"Egg:male", "Egg:female", "Egg:male,albino"
have additional DragonVariantTag overload with modifiers


ModifiedCategoryRanker:
- test for correct rankings:
  - target is empty:
    - one mc  is empty the other isn't
    - both mc are empty
  - target has one modifier:
      - one mc has the same modifier, the other a different
      - one mc has no modifiers, the other has the wrong one
      - both mc have one modifier which matches
      - both mc have no modifiers
  - target has two modifiers:
      - one mc has one of the modifiers, the other has the other
      - one mc has one of the modifiers, the other has both
      - one mc has one of the modifiers, the other has one which is wrong
      - one mc has one of the modifiers, the other has two, one of which is wrong

























